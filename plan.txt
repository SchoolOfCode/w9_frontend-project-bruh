* * * * * * Front end breakdown * * * * * *

Components required: 


CommentDisplay: This lets us render the comments on the page
    -   This will eventually be linked to the back end

    Props: What we want to display within the comment
    -   username: Make this a user entered field rahter than trying to implement authentication as it will take too much time

    -   timestamp: contains the date in which the comment was posted

    -   content: this is the message that will make up the body of the comment


    Features: (mainly the UI we will use from the library)
    -   Chip: UI element that will contain the post date. Can be linked to db to fill via postDate column
    -   More to be added after review

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

CreateComment: Allows us to form the comment UI 
    -   Can be customised with css to allow for colour switching

Contents: the make up of the component
    -   Button: Reply button with onClick elements to open a modal

    -   DialogTitle: Title at the top of the modal

    -   DialogContent: Container for the rest of the modal Components

    -   TextField: Input field. Used twice for name input and comment input.
        !!IMPORTANT
        We will need to link our db here to take the output of these fields and store them
        
        How do we target the output of each field? TextField is the component, and "value" corresponds to whatever is written in the field

        Do we need to use state to track the value, and then add an onChange event handler to get the value once the submit button is clicked?

-   

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


-   PostDisplay: Similar to the above, allows for posts to be created AND rendered on the page 
    -   This will also be linked to the back end in order to retrieve pre-populated posts in the table
    -   Also renders the comments that belong to a specific post


* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


-   Sidebar: Sitting on left hand side, this will allow us to select the subject topic we want to view information on. Houses the SelectorButtons


* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


-   SelectorButtons: Simple button component that will be linked to back end via fetch requests targeted at specific subjects via their ID

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


-   NewPostButton: Button that brings up a modal allowing for a user to write a new post. This will get saved in state, and then sent to the database.

CommentInput:

Props: (What will this function take in?)

Output: What do we expect the function to do?
-   Track what's being typed in the comment input box
-   Saves the latest entry in the box to state
-   handleClick

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *


- Fetch:
    -   post Posts
    -   get Posts
    -   post Comments
    -   get Comments